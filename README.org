* Introduction

[[https://travis-ci.org/schwehr/libais][https://travis-ci.org/schwehr/libais.svg?branch=master]]

Library for decoding maritime Automatic Identification System messages.

* See Also

http://en.wikipedia.org/wiki/Automatic_Identification_System

Other open source AIS projects:

- http://en.wikipedia.org/wiki/Gpsd
- http://www.freeais.org/ - does this actually decode AIS?
- http://github.com/DaMSA/AisLib
- http://github.com/schwehr/noaadata
- https://github.com/schwehr/ais-areanotice-py
- https://github.com/OpenCPN/OpenCPN
- https://github.com/bcl/aisparser

* Building

** Building with legacy Makefile

#+BEGIN_SRC sh
make -f Makefile-custom test
#+END_SRC

** Building with python

#+BEGIN_SRC sh
python setup.py build
python setup.py install
#+END_SRC

** Building with CMake

#+BEGIN_SRC sh
cmake .
make
#+END_SRC

* Usage

#+BEGIN_SRC sh
ipython
#+END_SRC

There are two interfaces to libais, one high-level iterator based one
and a low-level fast C++ only one. The iterator based interface is
accessed the following way:

#+BEGIN_SRC python
import ais.stream
with open("file.nmea") as f:
    for msg in ais.stream.decode(f):
        print msg
#+END_SRC

To use the low-level C++ interface directly, you need to handle multi-line messages and padding yourself:

#+BEGIN_SRC python
import ais
ais.decode('15PIIv7P00D5i9HNn2Q3G?wB0t0I', 0)
ais.decode('402u=TiuaA000r5UJ`H4`?7000S:', 0)
ais.decode('55NBjP01mtGIL@CW;SM<D60P5Ld000000000000P0`<3557l0<50@kk@K5h@00000000000', 0)
#+END_SRC

There is also support for converting parsed messages to the structure
output by GPSD / gpsdecode. For full compatibility, you have to write
the resulting message dictionaries to a file with json.dump() and add
a newline after each message.

#+BEGIN_SRC python
import ais.stream
import json
import ais.compatibility.gpsd

with open("infile.nmea") as inf:
    with open("outfile.gpsd") as outf:
        for msg in ais.stream.decode(f):
            gpsdmsg = ais.compatibility.gpsd.mangle(msg)
            json.dump(gpsdmsg, outf)
            outf.write("\n")
#+END_SRC

* AIS Specification Documents

- ITU-1371, ITU-1371-{1,2,3,4]
- http://www.e-navigation.nl/asm
- IMO Circ 236
- IMO Circ 289
- EU RIS

* Hacking

The C++ code was switched to the Google style in November, 2012.
Indenting should be by 2 spaces.

http://google-styleguide.googlecode.com/svn/trunk/cpplint/
